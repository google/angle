// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {478,  207, 1597, 1495, 1090, 951,  779, 289,  597,  170,
                              168,  245, 367,  198,  1851, 1125, 690, 1992, 1019, 467,
                              1062, 479, 499,  873,  114,  1232, 8,   1349, 306,  874,
                              1132, 556, 218,  1558, 959,  784,  1409};
constexpr int mangledkT2[] = {1600, 1757, 1638, 685,  312,  1431, 1473, 1193, 1336, 1252,
                              1000, 318,  1956, 642,  413,  1349, 142,  165,  667,  1909,
                              776,  182,  1163, 1995, 849,  905,  1905, 1901, 1265, 204,
                              55,   1808, 1924, 1800, 1603, 1381, 445};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    116,  0,    1326, 0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    512,  0,    0,    0,    143,
    0,    0,    0,    0,    0,    733,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    1352, 251,  1827, 0,    372,  0,    0,    614,  0,    0,    1173,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    720,  0,    0,    0,    0,    346,  367,  0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    541,  828,  0,    0,    0,    0,    0,    0,    1691,
    0,    0,    46,   891,  0,    703,  0,    0,    0,    1709, 0,    364,  1516, 0,    360,  0,
    0,    0,    0,    0,    0,    618,  0,    0,    0,    0,    708,  0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    1747, 0,    0,    0,    0,    343,  0,    0,    0,    626,
    1482, 0,    0,    0,    0,    0,    1392, 0,    808,  487,  0,    0,    0,    0,    1577, 0,
    0,    0,    0,    0,    0,    0,    0,    220,  0,    0,    0,    0,    0,    1896, 812,  0,
    0,    131,  0,    0,    0,    0,    0,    0,    1638, 0,    0,    0,    1535, 1751, 178,  0,
    0,    0,    0,    0,    0,    0,    0,    0,    1163, 882,  0,    0,    0,    0,    0,    0,
    0,    0,    184,  0,    812,  1827, 1086, 0,    751,  1712, 0,    1937, 0,    0,    0,    0,
    911,  0,    299,  0,    0,    0,    0,    0,    0,    0,    0,    1371, 639,  0,    0,    1784,
    0,    0,    0,    0,    0,    0,    0,    241,  0,    777,  0,    417,  0,    279,  1703, 1032,
    926,  0,    0,    58,   1452, 0,    77,   0,    262,  0,    0,    554,  0,    0,    1518, 0,
    208,  0,    0,    514,  0,    0,    0,    1944, 253,  723,  1752, 0,    0,    271,  0,    0,
    0,    807,  1487, 0,    0,    467,  1662, 0,    0,    0,    1775, 0,    10,   0,    828,  0,
    0,    0,    16,   155,  0,    0,    1534, 0,    0,    0,    0,    0,    0,    990,  0,    0,
    1533, 269,  0,    958,  0,    0,    0,    1456, 1816, 0,    0,    737,  0,    0,    0,    724,
    0,    0,    0,    0,    0,    0,    0,    1511, 511,  935,  0,    0,    0,    0,    792,  864,
    0,    0,    1932, 1213, 1520, 0,    1325, 0,    0,    0,    0,    948,  0,    0,    0,    539,
    0,    0,    0,    0,    0,    0,    0,    415,  288,  0,    0,    0,    0,    0,    640,  0,
    1672, 599,  0,    0,    0,    0,    0,    0,    0,    247,  0,    1633, 1581, 1397, 402,  294,
    0,    0,    0,    0,    0,    0,    278,  0,    538,  0,    434,  267,  0,    1945, 0,    1291,
    0,    661,  0,    0,    0,    791,  0,    0,    0,    0,    587,  0,    1798, 492,  0,    170,
    0,    0,    0,    0,    0,    1757, 0,    1389, 0,    0,    1294, 0,    348,  1037, 0,    0,
    0,    0,    953,  64,   0,    0,    486,  538,  992,  0,    0,    297,  872,  0,    0,    0,
    0,    0,    533,  0,    1793, 0,    886,  1282, 505,  1678, 0,    0,    0,    0,    120,  0,
    0,    0,    0,    0,    446,  0,    0,    0,    1811, 0,    0,    491,  0,    0,    0,    0,
    1165, 0,    0,    0,    0,    1314, 0,    1135, 0,    0,    0,    0,    0,    0,    1785, 0,
    1174, 643,  186,  92,   0,    292,  543,  22,   0,    0,    278,  0,    0,    0,    1091, 1664,
    0,    1538, 0,    0,    0,    0,    0,    320,  0,    0,    0,    484,  1044, 0,    712,  1143,
    0,    540,  0,    0,    84,   540,  579,  1839, 752,  352,  0,    0,    0,    1436, 1926, 0,
    0,    0,    1273, 328,  214,  741,  0,    0,    0,    561,  0,    0,    908,  0,    0,    0,
    1895, 713,  0,    0,    554,  0,    1815, 0,    922,  60,   0,    0,    0,    1481, 0,    0,
    0,    0,    0,    0,    0,    1460, 0,    641,  0,    0,    0,    0,    970,  0,    0,    459,
    0,    59,   1053, 0,    1810, 0,    1955, 817,  0,    0,    1903, 945,  0,    0,    0,    0,
    830,  0,    386,  1566, 0,    0,    1599, 0,    106,  1462, 0,    161,  0,    0,    826,  0,
    0,    549,  0,    0,    0,    527,  0,    0,    0,    0,    811,  285,  1479, 0,    0,    321,
    816,  1834, 1075, 362,  0,    54,   1123, 594,  0,    0,    0,    0,    912,  0,    1728, 0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    312,  0,    917,  908,  0,    104,
    0,    1809, 940,  1936, 0,    0,    0,    196,  0,    0,    130,  59,   0,    0,    111,  0,
    0,    0,    1500, 0,    1378, 0,    0,    0,    0,    254,  610,  0,    439,  1688, 0,    0,
    1521, 1659, 1768, 1787, 0,    1139, 0,    1954, 0,    0,    0,    0,    433,  1362, 1530, 634,
    0,    0,    0,    0,    0,    0,    1406, 0,    0,    203,  207,  0,    783,  0,    1045, 0,
    205,  0,    1809, 0,    0,    358,  0,    0,    0,    687,  696,  1780, 650,  1523, 0,    1237,
    570,  48,   1103, 98,   0,    0,    0,    0,    0,    494,  213,  0,    0,    497,  341,  0,
    0,    0,    0,    666,  0,    0,    1679, 0,    0,    224,  882,  1071, 33,   1958, 1822, 781,
    1794, 261,  0,    0,    912,  108,  0,    533,  0,    0,    416,  1846, 0,    0,    0,    0,
    0,    1176, 1683, 1330, 0,    0,    1447, 1161, 0,    1113, 0,    749,  0,    849,  0,    0,
    0,    565,  392,  0,    0,    775,  0,    1441, 370,  0,    138,  431,  483,  0,    1,    927,
    1160, 0,    0,    0,    881,  75,   153,  0,    0,    392,  469,  799,  95,   1950, 1563, 737,
    0,    0,    641,  72,   887,  399,  1673, 0,    0,    1645, 288,  0,    0,    1416, 0,    1499,
    171,  1475, 0,    0,    97,   0,    0,    90,   926,  0,    0,    363,  0,    0,    983,  0,
    1310, 0,    0,    0,    531,  0,    0,    0,    0,    688,  0,    0,    0,    773,  415,  1558,
    0,    0,    0,    1844, 0,    1714, 0,    0,    889,  1592, 0,    0,    1868, 236,  664,  1829,
    682,  129,  0,    959,  0,    861,  248,  0,    521,  747,  0,    0,    1384, 0,    665,  575,
    847,  1289, 0,    0,    0,    0,    812,  259,  132,  0,    331,  1085, 0,    772,  0,    379,
    0,    876,  0,    0,    351,  0,    64,   1917, 1541, 433,  1929, 0,    0,    167,  0,    1566,
    1305, 0,    0,    606,  1647, 0,    0,    0,    574,  0,    0,    499,  101,  0,    398,  0,
    695,  108,  510,  717,  0,    181,  0,    0,    1007, 1642, 742,  887,  1516, 0,    1429, 0,
    1272, 0,    1952, 787,  806,  0,    1599, 0,    195,  0,    539,  1020, 0,    0,    1381, 0,
    704,  0,    422,  0,    482,  0,    0,    273,  0,    0,    1323, 0,    0,    1294, 0,    0,
    0,    939,  0,    559,  0,    0,    295,  778,  0,    244,  17,   479,  235,  36,   0,    0,
    1315, 677,  0,    276,  1845, 0,    1597, 576,  0,    0,    1188, 1438, 1401, 1905, 0,    0,
    740,  953,  443,  236,  0,    0,    744,  279,  0,    349,  0,    0,    0,    1917, 1045, 0,
    0,    0,    0,    686,  1741, 0,    0,    0,    1326, 0,    1992, 1717, 0,    79,   637,  603,
    423,  0,    46,   0,    0,    899,  0,    957,  0,    820,  79,   907,  1575, 0,    828,  0,
    0,    0,    0,    0,    815,  389,  1559, 1442, 0,    1011, 0,    0,    333,  1772, 1731, 0,
    0,    0,    1062, 90,   1402, 476,  1561, 306,  0,    1169, 0,    1706, 0,    315,  708,  0,
    734,  0,    324,  1270, 914,  1630, 0,    216,  830,  0,    190,  211,  1965, 416,  0,    0,
    0,    0,    0,    73,   353,  499,  149,  0,    0,    0,    0,    539,  0,    0,    0,    803,
    814,  0,    0,    0,    286,  0,    1545, 501,  1266, 0,    0,    0,    0,    408,  0,    660,
    1999, 0,    1324, 726,  0,    0,    763,  1957, 0,    284,  724,  0,    244,  19,   702,  150,
    412,  981,  763,  111,  0,    0,    0,    901,  448,  887,  1001, 1337, 815,  0,    0,    1648,
    314,  0,    657,  1528, 1923, 208,  305,  621,  1656, 0,    837,  851,  112,  266,  1400, 130,
    0,    0,    138,  577,  0,    0,    0,    170,  44,   0,    0,    0,    92,   832,  617,  1705,
    464,  0,    0,    618,  669,  34,   0,    537,  0,    647,  0,    1908, 0,    1384, 0,    0,
    875,  489,  0,    164,  1483, 0,    126,  0,    0,    0,    1191, 0,    0,    629,  223,  507,
    0,    0,    176,  480,  0,    432,  1584, 535,  0,    1140, 0,    0,    804,  952,  1987, 0,
    0,    0,    91,   665,  0,    0,    1491, 842,  1856, 755,  1340, 385,  1930, 0,    1225, 0,
    0,    511,  0,    0,    0,    944,  0,    0,    67,   754,  0,    87,   700,  1853, 437,  1772,
    293,  527,  480,  1774, 309,  1299, 903,  0,    1060, 594,  0,    537,  0,    0,    1707, 564,
    754,  17,   0,    0,    0,    1654, 0,    0,    1995, 831,  0,    0,    0,    1202, 0,    912,
    0,    1708, 1999, 806,  18,   1091, 420,  0,    1230, 355,  1592, 226,  0,    1940, 39,   123,
    149,  0,    0,    0,    247,  345,  0,    0,    0,    0,    1750, 0,    0,    0,    753,  0,
    432,  0,    520,  0,    0,    9,    581,  0,    824,  309,  0,    0,    0,    0,    168,  0,
    699,  0,    1630, 818,  0,    0,    221,  0,    811,  69,   0,    237,  0,    0,    713,  0,
    0,    1488, 0,    0,    0,    228,  446,  1123, 652,  1566, 1966, 0,    718,  864,  1780, 311,
    0,    826,  0,    0,    1883, 377,  0,    1114, 14,   1088, 1573, 0,    0,    161,  274,  65,
    727,  0,    0,    0,    391,  263,  1118, 938,  473,  0,    0,    0,    414,  0,    742,  0,
    0,    0,    113,  1416, 0,    1555, 1434, 949,  0,    804,  1373, 637,  1090, 222,  300,  1362,
    0,    0,    0,    0,    0,    0,    973,  0,    11,   479,  0,    855,  687,  37,   0,    0,
    0,    393,  201,  0,    0,    1848, 0,    482,  0,    377,  1831, 745,  910,  0,    1731, 1998,
    193,  0,    0,    0,    231,  0,    1995, 485,  676,  0,    0,    0,    909,  1680, 0,    0,
    0,    122,  504,  0,    914,  0,    677,  0,    591,  0,    0,    433,  662,  759,  83,   0,
    0,    112,  1600, 305,  1014, 0,    0,    0,    252,  222,  728,  587,  26,   0,    0,    35,
    121,  0,    0,    319,  0,    632,  692,  0,    1412, 1459, 0,    1911, 0,    1443, 0,    1856,
    0,    0,    8,    0,    400,  1513, 0,    776,  0,    0,    0,    698,  49,   489,  709,  476,
    0,    852,  843,  246,  0,    141,  871,  0,    0,    929,  1346, 329,  956,  93,   0,    420,
    0,    516,  6,    500,  654,  0,    12,   356,  0,    385,  393,  792,  1839, 0,    138,  0,
    1710, 0,    928,  169,  0,    0,    1859, 888,  424,  0,    1274, 200,  0,    0,    0,    0,
    1453, 1533, 559,  0,    370,  0,    0,    596,  0,    340,  311,  490,  562,  95,   0,    239,
    1618, 184,  569,  1136, 1614, 8,    1456, 0,    0,    93,   5,    402,  1258, 664,  1782, 438,
    0,    344,  567,  691,  26,   0,    0,    1826, 1795, 0,    661,  0,    618,  540,  0,    0,
    573,  915,  0,    558,  976,  623,  1515, 0,    1452, 1425, 0,    1741, 0,    736,  0,    613,
    338,  454,  1248, 1935, 911,  995,  579,  0,    403,  117,  1542, 566,  313,  1364, 0,    0,
    1166, 104,  508,  0,    1768, 467,  801,  0,    1594, 0,    505,  0,    0,    456,  0,    430,
    242,  0,    215,  424,  147,  768,  705,  997,  590,  373,  582,  165,  1878, 553,  0,    968,
    788,  630,  1307, 0,    1526, 0,    742,  750,  0,    0,    1861, 52,   92,   297,  1883, 0,
    283,  75,   5,    0,    0,    0,    337,  302,  1194, 0,    895,  375,  952,  820,  323,  774,
    394,  592,  0,    0,    1330, 0,    1627, 0,    1727, 715,  0,    1897, 1458, 0,    555,  0,
    0,    0,    1292, 1884, 1557, 1514, 185,  0,    0,    0,    419,  1882, 642,  0,    433,  645,
    1868, 0,    390,  193,  0,    300,  187,  0,    91,   393,  0,    367,  0,    0,    628,  459,
    0,    769,  912,  0,    913,  0,    458,  910,  0,    826,  629,  1192, 1048, 0,    1056, 407,
    1226, 541,  1648, 658,  599,  0,    100,  484,  132,  41,   0,    1752, 0,    0,    545,  0,
    0,    0,    757,  1714, 79,   560,  1011, 0,    0,    179,  0,    0,    342,  317,  612,  0,
    1258, 422,  780,  42,   787,  0,    1045, 380,  0,    554,  620,  0,    0,    1938, 980,  687,
    833,  864,  1497, 0,    1864, 894,  841,  0,    198,  0,    0,    335,  146,  93,   758,  578,
    1011, 0,    793,  0,    0,    507,  42,   524,  0,    0,    401,  838,  0,    1977, 149,  0,
    0,    60};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 2002;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 2002;
}

constexpr int unmangledkT1[] = {203, 112, 52, 217, 66,  198, 28, 71, 106, 31, 87,  242, 171,
                                61,  229, 66, 63,  160, 99,  7,  49, 235, 62, 188, 166, 155};
constexpr int unmangledkT2[] = {150, 174, 19,  23,  35,  201, 187, 184, 40,  101, 183, 104, 35,
                                4,   22,  199, 177, 141, 0,   124, 56,  236, 240, 148, 242, 22};
constexpr int unmangledkG[]  = {
    0,   0,   211, 0,   0,   172, 0,   72,  0,   113, 35,  208, 99,  187, 0,   199, 0,   0,   219,
    0,   91,  0,   126, 51,  111, 49,  141, 0,   0,   0,   0,   0,   231, 76,  11,  0,   167, 58,
    0,   113, 0,   190, 190, 58,  243, 0,   55,  171, 0,   0,   11,  0,   143, 0,   96,  0,   222,
    0,   0,   210, 166, 32,  0,   0,   189, 175, 0,   152, 16,  204, 12,  0,   173, 0,   232, 0,
    0,   117, 1,   196, 0,   0,   0,   0,   0,   156, 159, 233, 121, 0,   134, 109, 54,  14,  195,
    141, 0,   131, 0,   0,   0,   0,   68,  0,   0,   0,   0,   217, 30,  223, 192, 149, 22,  0,
    144, 126, 18,  163, 94,  0,   171, 166, 219, 97,  63,  0,   6,   162, 132, 0,   148, 0,   0,
    0,   0,   75,  33,  214, 85,  123, 228, 197, 189, 1,   30,  0,   0,   224, 81,  0,   51,  127,
    77,  128, 30,  62,  0,   123, 0,   127, 0,   193, 172, 0,   59,  0,   180, 0,   13,  44,  29,
    0,   0,   0,   99,  164, 119, 0,   49,  134, 118, 129, 0,   0,   209, 49,  142, 43,  108, 169,
    0,   166, 0,   103, 41,  17,  0,   232, 214, 0,   0,   65,  221, 144, 0,   120, 174, 132, 0,
    17,  121, 0,   224, 11,  212, 0,   0,   112, 0,   134, 0,   0,   165, 0,   8,   153, 102, 0,
    0,   0,   76,  152, 119, 0,   187, 220, 106, 2,   0,   196, 0,   10,  92,  0};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 244;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 244;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
